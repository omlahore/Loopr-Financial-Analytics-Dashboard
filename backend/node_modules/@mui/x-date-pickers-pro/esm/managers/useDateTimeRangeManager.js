'use client';

import _extends from "@babel/runtime/helpers/esm/extends";
import * as React from 'react';
import { usePickerTranslations } from '@mui/x-date-pickers/hooks';
import { useApplyDefaultValuesToDateTimeValidationProps, useUtils } from '@mui/x-date-pickers/internals';
import { getRangeFieldValueManager, rangeValueManager } from "../internals/utils/valueManagers.js";
import { validateDateTimeRange } from "../validation/index.js";
import { formatRange } from "../internals/utils/date-utils.js";
export function useDateTimeRangeManager(parameters = {}) {
  const {
    enableAccessibleFieldDOMStructure = true,
    dateSeparator
  } = parameters;
  return React.useMemo(() => ({
    valueType: 'date-time',
    validator: validateDateTimeRange,
    internal_valueManager: rangeValueManager,
    internal_fieldValueManager: getRangeFieldValueManager({
      dateSeparator
    }),
    internal_enableAccessibleFieldDOMStructure: enableAccessibleFieldDOMStructure,
    internal_useApplyDefaultValuesToFieldInternalProps: useApplyDefaultValuesToDateTimeRangeFieldInternalProps,
    internal_useOpenPickerButtonAriaLabel: useOpenPickerButtonAriaLabel
  }), [enableAccessibleFieldDOMStructure, dateSeparator]);
}
function useOpenPickerButtonAriaLabel(value) {
  const utils = useUtils();
  const translations = usePickerTranslations();
  return React.useMemo(() => {
    return translations.openRangePickerDialogue(formatRange(utils, value, 'fullDate'));
  }, [value, translations, utils]);
}
function useApplyDefaultValuesToDateTimeRangeFieldInternalProps(internalProps) {
  const utils = useUtils();
  const validationProps = useApplyDefaultValuesToDateTimeValidationProps(internalProps);
  const ampm = React.useMemo(() => internalProps.ampm ?? utils.is12HourCycleInCurrentLocale(), [internalProps.ampm, utils]);
  return React.useMemo(() => _extends({}, internalProps, validationProps, {
    format: internalProps.format ?? (ampm ? utils.formats.keyboardDateTime12h : utils.formats.keyboardDateTime24h)
  }), [internalProps, validationProps, ampm, utils]);
}